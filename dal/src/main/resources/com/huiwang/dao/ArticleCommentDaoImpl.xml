<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.huiwang.dao.ArticleCommentDao">
	<resultMap id="commentResultMap" type="com.huiwang.model.ArticleCommentModel">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="simple_comment" property="simpleComment" jdbcType="VARCHAR" />
		<result column="comment" property="comment" jdbcType="VARCHAR" />
		<result column="article_id" property="articleId" jdbcType="BIGINT" />
		<result column="user_id" property="userId" jdbcType="BIGINT" />
		<result column="status" property="status" jdbcType="VARCHAR" />
		<result column="gmt_created" property="gmtCreated" jdbcType="TIMESTAMP" />
		<result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP" />
	</resultMap>

	<sql id="commentColumnList">
		id, simple_comment,comment,article_id, user_id, status,
		gmt_created, gmt_modified
	</sql>

	<select id="getList" parameterType="com.huiwang.param.ArticleCommentParam"
		resultMap="commentResultMap">
		select
		<include refid="commentColumnList" />
		from article_comment
		where
		<include refid="commentCondition" />
		limit #{offset}, #{pageSize}
	</select>
	
	<select id="getCount" parameterType="com.huiwang.param.ArticleCommentParam"
		resultType="int">
		select count(*) from article_comment where
		<include refid="commentCondition" />
	</select>

	<select id="getById" parameterType="java.lang.Long" resultMap="commentResultMap">
		select
		<include refid="commentColumnList" />
		from article_comment
		where id = #{id}
	</select>

	<delete id="delete" parameterType="com.huiwang.param.ArticleCommentParam" >
		delete from article_comment
		where
		<include refid="commentCondition" />
	</delete>

	<insert id="insert" parameterType="com.huiwang.param.ArticleCommentParam" useGeneratedKeys="true" keyProperty="id">
		insert into article_comment
		(simple_comment, article_id,
		user_id, status, gmt_created,
		gmt_modified, comment)
		values (#{simpleComment},#{articleId},
		#{userId}, 'normal', now(),now(),
		#{comment})
	</insert>
	<update id="update" parameterType="com.huiwang.param.ArticleCommentParam">
		update article_comment
		<set>
			<if test="simpleComment != null">
				simple_comment = #{simpleComment},
			</if>
			<if test="articleId != null">
				article_id = #{articleId},
			</if>
			<if test="userId != null">
				user_id = #{userId},
			</if>
			<if test="status != null">
				status = #{status},
			</if>
			<if test="comment != null">
				comment = #{comment},
			</if>
			gmt_modified = now()
		</set>
		where id = #{id}
	</update>

	<sql id="commentCondition">
		1 = 1
		<if test="id != null">
			and id = #{id}
		</if>
		<if test="simpleComment != null">
			and simple_comment = #{simpleComment}
		</if>
		<if test="articleId != null">
			and article_id = #{articleId}
		</if>
		<if test="userId != null">
			and user_id = #{userId}
		</if>
		<if test="status != null">
			and status = #{status}
		</if>
		<if test="comment != null">
			and comment = #{comment}
		</if>
		<if test="sortType != null">
			order by ${sortType}
		</if>
		<if test="descOrder == true">
			desc
		</if>
	</sql>
</mapper>